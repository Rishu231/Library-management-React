{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000\",\n  // Django backend URL\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Automatically attach JWT token if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration: Refresh and retry failed requests\napi.interceptors.response.use(response => response,\n// Return response if success\nasync error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem(\"refresh_token\");\n      if (refreshToken) {\n        const res = await axios.post(\"http://127.0.0.1:8000/api/token/refresh/\", {\n          refresh: refreshToken\n        });\n        localStorage.setItem(\"access_token\", res.data.access);\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${res.data.access}`;\n        return api(originalRequest); // Retry the failed request\n      }\n    } catch (refreshError) {\n      console.error(\"Session expired. Please log in again.\");\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n      window.location.href = \"/\"; // Redirect to login page\n    }\n  }\n  return Promise.reject(error);\n});\nexport const getCsrfToken = () => {\n  const cookies = document.cookie.split(\"; \");\n  const csrfCookie = cookies.find(row => row.startsWith(\"csrftoken=\"));\n  return csrfCookie ? csrfCookie.split(\"=\")[1] : null;\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","originalRequest","status","_retry","refreshToken","res","post","refresh","setItem","data","access","defaults","common","refreshError","console","removeItem","window","location","href","Promise","reject","getCsrfToken","cookies","document","cookie","split","csrfCookie","find","row","startsWith"],"sources":["/Users/raj/Web application/book_management/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000\", // Django backend URL\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Automatically attach JWT token if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration: Refresh and retry failed requests\napi.interceptors.response.use(\n  (response) => response, // Return response if success\n  async (error) => {\n    const originalRequest = error.config;\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        const refreshToken = localStorage.getItem(\"refresh_token\");\n        if (refreshToken) {\n          const res = await axios.post(\"http://127.0.0.1:8000/api/token/refresh/\", {\n            refresh: refreshToken,\n          });\n          localStorage.setItem(\"access_token\", res.data.access);\n          api.defaults.headers.common[\"Authorization\"] = `Bearer ${res.data.access}`;\n          return api(originalRequest); // Retry the failed request\n        }\n      } catch (refreshError) {\n        console.error(\"Session expired. Please log in again.\");\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        window.location.href = \"/\"; // Redirect to login page\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const getCsrfToken = () => {\n  const cookies = document.cookie.split(\"; \");\n  const csrfCookie = cookies.find((row) => row.startsWith(\"csrftoken=\"));\n  return csrfCookie ? csrfCookie.split(\"=\")[1] : null;\n};\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACK,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ;AAAE;AACxB,MAAOC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACf,MAAMC,eAAe,GAAGF,KAAK,CAACN,MAAM;EACpC,IAAI,EAAAO,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMC,YAAY,GAAGT,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MAC1D,IAAIQ,YAAY,EAAE;QAChB,MAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,0CAA0C,EAAE;UACvEC,OAAO,EAAEH;QACX,CAAC,CAAC;QACFT,YAAY,CAACa,OAAO,CAAC,cAAc,EAAEH,GAAG,CAACI,IAAI,CAACC,MAAM,CAAC;QACrDzB,GAAG,CAAC0B,QAAQ,CAACtB,OAAO,CAACuB,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUP,GAAG,CAACI,IAAI,CAACC,MAAM,EAAE;QAC1E,OAAOzB,GAAG,CAACgB,eAAe,CAAC,CAAC,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOY,YAAY,EAAE;MACrBC,OAAO,CAACf,KAAK,CAAC,uCAAuC,CAAC;MACtDJ,YAAY,CAACoB,UAAU,CAAC,cAAc,CAAC;MACvCpB,YAAY,CAACoB,UAAU,CAAC,eAAe,CAAC;MACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;IAC9B;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAACrB,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMsB,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC3C,MAAMC,UAAU,GAAGJ,OAAO,CAACK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,UAAU,CAAC,YAAY,CAAC,CAAC;EACtE,OAAOH,UAAU,GAAGA,UAAU,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACrD,CAAC;AACD,eAAexC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}